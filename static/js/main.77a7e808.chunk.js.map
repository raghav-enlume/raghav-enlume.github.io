{"version":3,"sources":["components/HOC/TableComponent.tsx","services/api.tsx","config/index.tsx","services/error-boundary.tsx","components/Home.tsx","components/Groups.tsx","components/Notifications.tsx","components/devices/Device.tsx","lib/util.tsx","routes/index.tsx","components/layout/index.tsx","context/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TableComponent","props","dataSource","columns","onChange","rowKey","baseURL","Object","freeze","serverEndPoint","errorHandler","err","console","error","component","FuncErrorBoundary","className","message","Fragment","children","state","undefined","info","this","React","Component","Home","useState","devices","setDevices","useEffect","fetch","then","res","json","result","processData","data","map","item","deviceData","JSON","parse","device_data","ram","storage","title","dataIndex","defaultSortOrder","sorter","a","b","device_id","sortDirections","device_name","render","record","path","to","filters","text","value","filterMultiple","onFilter","os","indexOf","length","pagination","extra","log","getName","R","Groups","groups","setGroups","blacklist","whitelist","tag","i","color","toUpperCase","Notifications","Device","id","useParams","name","URLSearchParams","useLocation","search","get","Routes","exact","Header","Layout","Sider","Content","AppLayout","collapsed","setCollapsed","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","icon","ApartmentOutlined","UsergroupAddOutlined","NotificationOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","minHeight","Context","createContext","APIContext","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77a7e808.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { Table } from 'antd';\n\nconst TableComponent = (props: any) => {\n    const { dataSource, columns, onChange, rowKey} = props;\n    return (\n        <div>\n            <Table dataSource={dataSource} columns={columns} onChange={onChange} rowKey={rowKey}/>;\n        </div>\n    )\n}\n\nTableComponent.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array,\n  onChange: PropTypes.func,\n  rowKey: PropTypes.string\n}\n\nexport default TableComponent\n","import Config from '../config/index';\nconst { serverEndPoint : baseURL } = Config;\nconst errorHandler = (err:Error) => console.error(err);\n\nexport const fetchDeviceList = () : any => fetch(`${baseURL}/getdevicedetails`).then(res=>res.json(), errorHandler);\nexport const fetchGroupList = () : any => fetch(`${baseURL}/getgroupdetails`).then(res=>res.json(), errorHandler);","export default Object.freeze({\n    serverEndPoint: 'https://1xaglr1sdj.execute-api.ap-south-1.amazonaws.com/api'\n})","import React from \"react\"\n\ntype ErrorHandler = (error: Error, info: React.ErrorInfo) => void\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode\n\ntype ErrorState = { error?: Error }\n\nfunction Catch<Props extends {}>(\n  component: ErrorHandlingComponent<Props>,\n  errorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n  return class extends React.Component<Props, ErrorState> {\n    state: ErrorState = {\n      error: undefined\n    }\n    \n    static getDerivedStateFromError(error: Error) {\n      return { error }\n    }\n    \n    componentDidCatch(error: Error, info: React.ErrorInfo) {\n      if (errorHandler) {\n        errorHandler(error, info)\n      }\n    }\n    \n    render() {\n      return component(this.props, this.state.error)\n    }\n  }\n}\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst FuncErrorBoundary = Catch(function MyErrorBoundary(props: Props, error?: Error) {\n  if (error) {\n    return (\n      <div className=\"error-screen\">\n        <h2>An error has occured</h2>\n        <h4>{error.message}</h4>\n      </div>\n    )\n  } else {\n    return <React.Fragment>{props.children}</React.Fragment>\n  }\n});\n\nexport default FuncErrorBoundary;","import { useEffect, useState } from 'react';\nimport TableComponent from './HOC/TableComponent'\nimport { fetchDeviceList } from '../services/api';\nimport FuncErrorBoundary from '../services/error-boundary';\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [devices, setDevices] = useState([]);\n  useEffect(() => {\n    fetchDeviceList().then((result:any) =>setDevices(processData(result)));\n  }, [])\n\n  const processData = (data:any) => data.map((item:any)=>{\n          let deviceData = JSON.parse(item.device_data);\n          item.ram = deviceData.ram;\n          item.storage = deviceData.storage;\n          return item;\n      });\n  \n\n  const columns = [\n    {\n      title: 'Id',\n      dataIndex: 'device_id',\n      defaultSortOrder: 'ascend',\n      sorter: (a:any, b:any) => a.device_id - b.device_id,\n      sortDirections: ['descend','ascend']\n    },\n    {\n      title: 'Name',\n      dataIndex: 'device_name',\n      sorter: (a:any, b:any) => a.device_name - b.device_name,\n      sortDirections: ['descend','ascend'],\n      render: (device_name:string,record:any) => {\n        const path = `/device/${record.device_id}?name=${device_name}`;\n        return  (<><Link to={path}> {`${device_name}`}</Link></>)\n      }\n    },\n    {\n      title: 'Group',\n      dataIndex: 'group_name',\n    },\n    {\n      title: 'OS',\n      dataIndex: 'os',\n      filters: [\n        {\n          text: 'Ubuntu',\n          value: 'Ubuntu',\n        },\n        {\n          text: 'MacOS',\n          value: 'macOS',\n        },\n      ],\n      filterMultiple: true,\n      onFilter: (value:string, record:any) => record.os.indexOf(value) === 0,\n      sorter: (a:any, b:any) => a.os.length - b.os.length,\n    },\n    {\n      title: 'IP Address',\n      dataIndex: 'ipaddress',\n    },\n    {\n      title: 'Ram',\n      dataIndex: 'ram',\n    },\n    {\n      title: 'Storage',\n      dataIndex: 'storage',\n    }\n  ];\n  function onChange(pagination:any, filters:any, sorter:any, extra:any) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n  return (\n      <FuncErrorBoundary>\n        <h3> Devices </h3>\n      <TableComponent dataSource={devices} columns={columns} onChange={onChange} rowKey=\"device_id\"/>\n      </FuncErrorBoundary>\n  )\n}\n\nexport default Home;\n","import { useEffect, useState } from 'react';\nimport { Tag } from 'antd';\nimport FuncErrorBoundary from '../services/error-boundary';\nimport TableComponent from './HOC/TableComponent'\nimport { fetchGroupList } from '../services/api';\nimport * as R from 'ramda'\nconst getName = R.pluck('name');\n\n\nconst Groups = () => {\n    const [groups, setGroups] = useState([]);\n    useEffect(() => {\n        fetchGroupList().then((result: any) => setGroups(processData(result)));\n    }, []);\n    const processData = (data:any) => data.map((item:any)=>{\n        item.blacklist = (item.blacklist && getName(item.blacklist)) || [];\n        item.whitelist = (item.whitelist && getName(item.whitelist)) || [];\n        return item;\n    });\n    const columns = [\n        {\n            title: 'Id',\n            dataIndex: 'id',\n        },\n        {\n            title: 'Name',\n            dataIndex: 'group',\n        },\n        {\n            title: 'Blocklist',\n            dataIndex: 'blacklist',\n            render: (blacklist:any) => (\n                <>\n                  {blacklist.map((tag:any, i:number) => {\n                    return (\n                      <Tag color='volcano' key={i}>\n                        {tag.toUpperCase()}\n                      </Tag>\n                    );\n                  })}\n                </>\n              ),\n        },\n        {\n            title: 'Whitelist',\n            dataIndex: 'whitelist',\n            render: (whitelist:any) => (\n                <>\n                  {whitelist.map((tag:any, i:number) => {\n                    let color = i % 2 === 0 ? 'geekblue' : 'green';\n                    return (\n                      <Tag color={color} key={i}>\n                        {tag.toUpperCase()}\n                      </Tag>\n                    );\n                  })}\n                </>\n              ),\n        }\n    ];\n    function onChange(pagination: any, filters: any, sorter: any, extra: any) {\n        console.log('params', pagination, filters, sorter, extra);\n    }\n    return (\n        <FuncErrorBoundary>\n            <h3>Groups</h3>\n            <TableComponent dataSource={groups} columns={columns} onChange={onChange} rowKey=\"id\"/>\n        </FuncErrorBoundary>\n    )\n}\n\nexport default Groups;\n","import FuncErrorBoundary from '../services/error-boundary';\n\nconst Notifications = () => {\n    return (\n        <FuncErrorBoundary>\n            <h3>Notifications</h3> \n        </FuncErrorBoundary>\n    )\n}\n\nexport default Notifications;\n","import React from 'react'\nimport { useParams } from \"react-router\"\nimport { useQuery } from \"../../lib/util\";\n\ninterface ParamTypes {\n    id: string\n  }\n\nconst Device = () => {\n    const { id } = useParams<ParamTypes>()\n    const query = useQuery();\n    const name = query.get(\"name\")\n    return (\n        <div>\n            <h1>{name} - {id}</h1>\n        </div>\n    )\n}\n\nexport default Device\n","import { useLocation } from \"react-router\"\n\nexport const useQuery = () => new URLSearchParams(useLocation().search);","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from '../components/Home';\nimport Groups from '../components/Groups';\nimport Notifications from '../components/Notifications';\nimport Device from '../components/devices/Device';\n\nconst Routes = () => {\n    return (\n        <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/device/:id\">\n          <Device />\n        </Route>\n        <Route exact path=\"/groups\">\n          <Groups />\n        </Route>\n        <Route exact path=\"/notifications\">\n          <Notifications />\n        </Route>\n      </Switch>\n    )\n}\n\nexport default Routes\n","import React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  ApartmentOutlined,\n  UsergroupAddOutlined,\n  NotificationOutlined\n} from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport Routes from '../../routes/index';\n\nconst { Header, Sider, Content } = Layout;\n\nconst AppLayout = () => {\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n    return (\n      <Layout>\n        <Sider trigger={null} collapsible collapsed={collapsed}>\n          <div className=\"logo\"> Intra polis </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" icon={<ApartmentOutlined />}>\n            <Link to=\"/\">Devices</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />}>\n            <Link to=\"/groups\">Groups</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<NotificationOutlined />}>\n            <Link to=\"/notifications\">Notifications</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n              className: 'trigger',\n              onClick: toggle,\n            })}\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n              minHeight: 280,\n            }}\n          >\n            <Routes />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n}\n\nexport default AppLayout","import React from 'react'\nexport const Context = React.createContext({});\n\nconst  APIContext = ({children}:any) => {\n    return (\n        <Context.Provider value={{ }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default APIContext;","import 'antd/dist/antd.css';\nimport './index.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AppLayout from './components/layout/index';\nimport ContextAPI from './context/index';\nimport FuncErrorBoundary from './services/error-boundary';\n\nconst App = () => {\n  return (\n    <FuncErrorBoundary>\n    <ContextAPI>\n    <Router>\n        <AppLayout />\n    </Router>\n    </ContextAPI>\n    </FuncErrorBoundary>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}