{"version":3,"sources":["i18n.ts","context/index.tsx","services/error-boundary.tsx","components/Notifications.tsx","util/AxiosInstance.ts","util/Api.ts","config/index.tsx","lib/table.tsx","components/devices/Device.tsx","lib/util.tsx","private-route/index.tsx","components/ManagedApps.tsx","components/LicencePolicy.tsx","components/Groups.tsx","components/devices/DeviceList.tsx","components/Assets.tsx","routes/index.tsx","components/layout/index.tsx","components/Login.tsx","routes/main-route/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","Context","React","createContext","APIContext","children","Provider","value","component","errorHandler","FuncErrorBoundary","props","error","className","message","state","undefined","info","this","Component","Notifications","axiosInstance","axios","create","interceptors","request","config","Promise","reject","response","baseURL","Object","freeze","serverEndPoint","getDeviceList","a","get","data","getGroupList","getRunningAppList","post","getInstalledAppList","Option","Select","getName","R","dateFormatPattern","installedAppsTableConfig","title","dataIndex","render","time","moment","Date","format","runningAppsTableConfig","install_time","groupsTableConfig","whitelist","record","tmp","map","tag","i","color","toUpperCase","Math","random","blacklist","initDeviceListTableConfig","groups","sorter","b","device_id","sortOrder","device_name","length","path","to","group_name","defaultValue","group_id","style","width","group","id","name","filters","text","filterMultiple","onFilter","os","indexOf","CheckOutlined","CloseOutlined","last_heart_beat_time","replaceAll","is_complient","TabPane","Tabs","Device","query","URLSearchParams","useLocation","search","t","useTranslation","device","useState","runningApps","setRunningApps","installedApps","setInstalledApps","useEffect","payload","timerange","rDviceList","iDeviceList","defaultActiveKey","tab","dataSource","columns","rowKey","PrivateRoute","exact","localStorage","getItem","ManagedApps","LicencePolicy","Groups","setGroups","result","byGroupName","item","DeviceList","devices","setDevices","Form","useForm","form","forceUpdate","deviceCount","statesCount","complienceCount","groupCount","statsData","setStatsData","groupList","reducer","accumulator","currentValue","find","obj","push","reduce","deviceData","JSON","parse","device_data","ram","storage","start","round","duration","diff","asMinutes","filter","keys","marginBottom","direction","size","marginTop","onFinish","values","console","log","gutter","xs","sm","md","lg","span","Item","rules","required","prefix","SearchOutlined","placeholder","hasFeedback","suffixIcon","UsergroupAddOutlined","shouldUpdate","type","htmlType","disabled","isFieldsTouched","getFieldsError","errors","Assets","Routes","Header","Layout","Sider","Content","AppLayout","collapsed","setCollapsed","history","useHistory","trigger","collapsible","onClick","aria-hidden","src","alt","theme","mode","defaultSelectedKeys","icon","ApartmentOutlined","NotificationOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","layout","labelCol","wrapperCol","tailLayout","offset","Login","marginLeft","marginRight","border","backgroundColor","initialValues","remember","setItem","onFinishFailed","errorInfo","label","Password","valuePropName","MainRoute","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.902a3431.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport English from './locale/en_translate.json';\n\nconst resources = {\n  en: {\n    translation: English,\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'en',\n\n  keySeparator: false,\n\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nexport const Context = React.createContext({});\n\nconst APIContext: React.FC = ({ children }) => {\n  return <Context.Provider value={{}}>{children}</Context.Provider>;\n};\n\nexport default APIContext;\n","import React, { ErrorInfo, Component, ReactNode, ComponentType } from 'react';\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void;\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => ReactNode;\n\ntype ErrorState = { error?: Error };\n\nfunction Catch(\n  component: ErrorHandlingComponent<Props>,\n  errorHandler?: ErrorHandler\n): ComponentType<Props> {\n  return class extends Component<Props, ErrorState> {\n    // eslint-disable-next-line react/state-in-constructor\n    state: ErrorState = {\n      error: undefined,\n    };\n\n    static getDerivedStateFromError(error: Error) {\n      return { error };\n    }\n\n    componentDidCatch(error: Error, info: ErrorInfo) {\n      if (errorHandler) {\n        errorHandler(error, info);\n      }\n    }\n\n    render() {\n      const { error } = this.state;\n      return component(this.props, error);\n    }\n  };\n}\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst FuncErrorBoundary = Catch(function MyErrorBoundary(\n  props: Props,\n  error?: Error\n) {\n  if (error) {\n    return (\n      <div className=\"error-screen\">\n        <h2>An error has occured</h2>\n        <h4>{error.message}</h4>\n      </div>\n    );\n  }\n  return <>{props.children}</>;\n});\n\nexport default FuncErrorBoundary;\n","import React from 'react';\n\nconst Notifications: React.FC = () => {\n  return (\n    <>\n      <h3>Notifications</h3>\n    </>\n  );\n};\n\nexport default Notifications;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create();\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  },\n  (error) => {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance;\n","import axios from './AxiosInstance';\nimport Config from '../config/index';\nimport { GetDeviceAppsPayload, Device, Group } from './constants/types';\n\nconst { serverEndPoint: baseURL } = Config;\n\nexport const getDeviceList = async (): Promise<Device[]> => {\n  const response = await axios.get(`${baseURL}/getdevicedetails`);\n  return response.data;\n};\n\nexport const getGroupList = async (): Promise<Group[]> => {\n  const response = await axios.get(`${baseURL}/getgroupdetails`);\n  return response.data;\n};\n\nexport const getRunningAppList = async (\n  data: GetDeviceAppsPayload\n): Promise<any> => {\n  const response = await axios.post(`${baseURL}/getrunningapps`, data);\n  return response.data;\n};\n\nexport const getInstalledAppList = async (\n  data: GetDeviceAppsPayload\n): Promise<any> => {\n  const response = await axios.post(`${baseURL}/getinstalledapps`, data);\n  return response.data;\n};\n\nexport default {};\n","export default Object.freeze({\n  serverEndPoint: 'https://1xaglr1sdj.execute-api.ap-south-1.amazonaws.com/api',\n});\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport * as R from 'ramda';\nimport { Tag, Select } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { Blacklist, Group, Whitelist, Device } from '../util/constants/types';\n\nconst { Option } = Select;\n\nconst getName = R.pluck('name');\nconst dateFormatPattern = 'MMM D YYYY, h:mm A';\n\nexport const installedAppsTableConfig = [\n  {\n    title: 'Name',\n    dataIndex: 'App name',\n  },\n  {\n    title: 'Installation status',\n    dataIndex: 'Installation status',\n  },\n  {\n    title: 'Time',\n    dataIndex: 'time',\n    render: (time: string): string =>\n      moment(new Date(time)).format(dateFormatPattern),\n  },\n];\n\nexport const runningAppsTableConfig = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n  },\n  {\n    title: 'Running Status',\n    dataIndex: 'Running status',\n  },\n  {\n    title: 'Installation status',\n    dataIndex: 'Installation status',\n  },\n  {\n    title: 'Installed Time',\n    dataIndex: 'install_time',\n    render: (install_time: string): string =>\n      moment(new Date(install_time)).format(dateFormatPattern),\n  },\n];\n\nexport const groupsTableConfig: ColumnsType<Group> = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n  },\n  {\n    title: 'Name',\n    dataIndex: 'group',\n  },\n  {\n    title: 'Force list apps',\n    dataIndex: 'whitelist',\n    render: (whitelist: Whitelist[], record: Group): React.ReactNode => {\n      const tmp = whitelist;\n      return (\n        <>\n          {record.whitelist &&\n            getName(tmp).map((tag: string, i: number) => {\n              const color = i % 2 === 0 ? 'geekblue' : 'green';\n              return (\n                <Tag color={color} key={Math.random()}>\n                  {tag.toUpperCase()}\n                </Tag>\n              );\n            })}\n        </>\n      );\n    },\n  },\n  {\n    title: 'Banned list apps',\n    dataIndex: 'blacklist',\n    render: (blacklist: Blacklist[], record: Group): React.ReactNode => {\n      const tmp = blacklist;\n      return (\n        <>\n          {record.blacklist &&\n            getName(tmp).map((tag: string) => {\n              return (\n                <Tag color=\"volcano\" key={Math.random()}>\n                  {tag.toUpperCase()}\n                </Tag>\n              );\n            })}\n        </>\n      );\n    },\n  },\n];\n\nexport const initDeviceListTableConfig = (data: any) => {\n  const { groups } = data;\n  const deviceListTableConfig: ColumnsType<Device> = [\n    {\n      title: 'Id',\n      dataIndex: 'device_id',\n      sorter: (a: Device, b: Device): number => a.device_id - b.device_id,\n      sortOrder: 'ascend',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'device_name',\n      sorter: (a: Device, b: Device): number =>\n        a.device_name.length - b.device_name.length,\n      render: (device_name: string, record: Device): React.ReactNode => {\n        const path = `/device/${record.device_id}?name=${device_name}`;\n        return (\n          <>\n            <Link to={path}> {`${device_name}`}</Link>\n          </>\n        );\n      },\n    },\n    {\n      title: 'Group',\n      dataIndex: 'group_name',\n      render: (group_name: string, record: Device): React.ReactNode => {\n        return (\n          <Select defaultValue={record.group_id} style={{ width: 120 }}>\n            {groups.map((group: any) => (\n              <Option key={Math.random()} value={group.id}>\n                {group.name}\n              </Option>\n            ))}\n          </Select>\n        );\n      },\n    },\n    {\n      title: 'OS',\n      dataIndex: 'os',\n      filters: [\n        {\n          text: 'Ubuntu',\n          value: 'Ubuntu',\n        },\n        {\n          text: 'MacOS',\n          value: 'macOS',\n        },\n      ],\n      filterMultiple: true,\n      onFilter: (value: any, record: Device): boolean =>\n        record.os.indexOf(value) === 0,\n      sorter: (a: Device, b: Device): number => a.os.length - b.os.length,\n    },\n    {\n      title: 'IP Address',\n      dataIndex: 'ipaddress',\n    },\n    {\n      title: 'Ram',\n      dataIndex: 'ram',\n    },\n    {\n      title: 'Storage',\n      dataIndex: 'storage',\n    },\n    {\n      title: 'State',\n      dataIndex: 'state',\n      render: (state: boolean): React.ReactNode => {\n        return state ? <CheckOutlined /> : <CloseOutlined />;\n      },\n    },\n    {\n      title: 'Updated Time',\n      dataIndex: 'last_heart_beat_time',\n      render: (last_heart_beat_time: string): string => {\n        const tmp = last_heart_beat_time.replaceAll('\"', '');\n        return moment(new Date(tmp)).format('MMM D YYYY, h:mm A');\n      },\n    },\n    {\n      title: 'Complient',\n      dataIndex: 'is_complient',\n      render: (is_complient: boolean): React.ReactNode => {\n        return is_complient ? <CheckOutlined /> : <CloseOutlined />;\n      },\n    },\n  ];\n  return deviceListTableConfig;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Table } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '../../lib/util';\nimport { getRunningAppList, getInstalledAppList } from '../../util/Api';\nimport {\n  installedAppsTableConfig,\n  runningAppsTableConfig,\n} from '../../lib/table';\n\nconst { TabPane } = Tabs;\n\nconst Device: React.FC = () => {\n  const query = useQuery();\n  const { t } = useTranslation();\n  const device = query.get('name');\n  const [runningApps, setRunningApps] = useState([]);\n  const [installedApps, setInstalledApps] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const payload = { device, timerange: '120m' };\n      const rDviceList = await getRunningAppList(payload);\n      const iDeviceList = await getInstalledAppList(payload);\n      setInstalledApps(iDeviceList);\n      setRunningApps(rDviceList);\n    })();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        {' '}\n        {t('device')} : {device}\n      </h1>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Running Apps\" key=\"1\">\n          <h1>{t('runningApps')}</h1>\n          <Table\n            dataSource={runningApps}\n            columns={runningAppsTableConfig}\n            rowKey={() => Math.random()}\n          />\n        </TabPane>\n        <TabPane tab=\"Installed Apps\" key=\"2\">\n          <h1>{t('installedApps')}</h1>\n          <Table\n            dataSource={installedApps}\n            columns={installedAppsTableConfig}\n            rowKey={() => Math.random()}\n          />\n        </TabPane>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Device;\n","import { useLocation } from 'react-router';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useQuery = (): URLSearchParams =>\n  new URLSearchParams(useLocation().search);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ninterface Props {\n  component: React.FC;\n  path: string;\n  exact: boolean;\n}\n\nconst PrivateRoute: React.FC<Props> = ({ path, exact, component }: Props) => {\n  const isAuthenticated = localStorage.getItem('user');\n\n  return isAuthenticated ? (\n    <Route path={path} exact={exact} component={component} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n};\nexport default PrivateRoute;\n","import React from 'react';\n\nconst ManagedApps: React.FC = () => {\n  return (\n    <>\n      <h3>Manged Apps</h3>\n    </>\n  );\n};\n\nexport default ManagedApps;\n","import React from 'react';\n\nconst LicencePolicy: React.FC = () => {\n  return (\n    <>\n      <h3>Licence Policy</h3>\n    </>\n  );\n};\n\nexport default LicencePolicy;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport { getGroupList } from '../util/Api';\nimport { groupsTableConfig } from '../lib/table';\nimport { Group } from '../util/constants/types';\n\nconst Groups: React.FC = () => {\n  const [groups, setGroups] = useState<Group[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const result = await getGroupList();\n      setGroups(result);\n    })();\n  }, []);\n\n  return (\n    <>\n      <h3>Groups</h3>\n      <Table\n        dataSource={groups}\n        columns={groupsTableConfig}\n        rowKey={(record: Group) => record.id}\n      />\n    </>\n  );\n};\n\nexport default Groups;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  Space,\n  Card,\n  Form,\n  Input,\n  Button,\n  Select,\n  Row,\n  Col,\n} from 'antd';\nimport * as R from 'ramda';\nimport moment from 'moment';\nimport { SearchOutlined, UsergroupAddOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { initDeviceListTableConfig } from '../../lib/table';\nimport { Device } from '../../util/constants/types';\nimport { getDeviceList } from '../../util/Api';\n\nconst { Option } = Select;\ninterface GroupList {\n  id: number;\n  name: string;\n}\nconst byGroupName = R.groupBy((item: Device) => item.group_name);\n\nconst DeviceList: React.FC = () => {\n  const { t } = useTranslation();\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [groups, setGroups] = useState<GroupList[]>([]);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState({});\n  const [statsData, setStatsData] = useState({\n    deviceCount: 0,\n    statesCount: 0,\n    complienceCount: 0,\n    groupCount: 0,\n  });\n\n  const onFinish = (values: any) => {\n    console.log('Finish:', values);\n  };\n\n  const processData = (data: Device[]) =>\n    data.map((item: Device) => {\n      const deviceData = JSON.parse(item.device_data);\n      const tmp = item;\n      tmp.ram = deviceData.ram;\n      tmp.storage = deviceData.storage;\n      const start = new Date(item.last_heart_beat_time.replaceAll('\"', ''));\n      // start.setHours(start.getHours() + 5);\n      // start.setMinutes(start.getMinutes() + 30);\n      tmp.state =\n        Math.round(\n          moment\n            .duration(\n              moment(item.last_heart_beat_time.replaceAll('\"', '')).diff(start)\n            )\n            .asMinutes()\n        ) < 5;\n      return tmp;\n    });\n  useEffect(() => {\n    (async () => {\n      const result = await getDeviceList();\n      let groupList = result.map((item) => ({\n        id: item.group_id,\n        name: item.group_name,\n      }));\n      const reducer = (accumulator: any, currentValue: any) => {\n        if (!accumulator.find((obj: any) => obj.id === currentValue.id)) {\n          accumulator.push(currentValue);\n        }\n        return accumulator;\n      };\n      groupList = groupList.reduce(reducer, []);\n      setGroups(groupList);\n      setDevices(processData(result));\n      setStatsData({\n        deviceCount: result.length,\n        statesCount: result.filter((item) => item.state).length,\n        complienceCount: result.filter((item) => item.is_complient).length,\n        groupCount: Object.keys(byGroupName(result)).length,\n      });\n    })();\n    forceUpdate({});\n  }, []);\n  const { deviceCount, statesCount, complienceCount, groupCount } = statsData;\n\n  return (\n    <>\n      <h3> {t('device')} </h3>\n      <div style={{ marginBottom: '1em' }}>\n        <Space direction=\"horizontal\" size=\"large\">\n          <Card className=\"count-card\">\n            <div className=\"card-content\">\n              <h1 className=\"count-number\">{deviceCount}</h1>\n              <h2>{t('totalDevices')} </h2>\n            </div>\n          </Card>\n          <Card className=\"count-card\">\n            <div className=\"card-content\">\n              <h1 className=\"count-number\">{statesCount}</h1>\n              <h2>{t('totalStates')} </h2>\n            </div>\n          </Card>\n          <Card className=\"count-card\">\n            <div className=\"card-content\">\n              <h1 className=\"count-number\">{complienceCount}</h1>\n              <h2>{t('totalComplience')} </h2>\n            </div>\n          </Card>\n          <Card className=\"count-card\">\n            <div className=\"card-content\">\n              <h1 className=\"count-number\">{groupCount}</h1>\n              <h2>{t('totalGroups')} </h2>\n            </div>\n          </Card>\n        </Space>\n      </div>\n\n      <div style={{ marginTop: '8px' }}>\n        <Form\n          form={form}\n          name=\"horizontal_login\"\n          // layout=\"inline\"\n          onFinish={onFinish}\n        >\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col className=\"gutter-row\" span={10}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  { required: true, message: 'Please enter asset name!' },\n                ]}\n              >\n                <Input\n                  prefix={<SearchOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Asset Name\"\n                />\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={8}>\n              <Form.Item\n                name=\"group\"\n                hasFeedback\n                rules={[\n                  { required: true, message: 'Please select your group!' },\n                ]}\n              >\n                <Select\n                  placeholder=\"Please select a group\"\n                  suffixIcon={\n                    <UsergroupAddOutlined className=\"ant-select-suffix\" />\n                  }\n                >\n                  {groups &&\n                    groups.map((item) => (\n                      <Option key={item.id} value={item.id}>\n                        {item.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={6}>\n              <Form.Item shouldUpdate>\n                {() => (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={\n                      !form.isFieldsTouched(true) ||\n                      !!form\n                        .getFieldsError()\n                        .filter(({ errors }) => errors.length).length\n                    }\n                  >\n                    Filter\n                  </Button>\n                )}\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n\n      {groups.length ? (\n        <Table<Device>\n          dataSource={devices}\n          columns={initDeviceListTableConfig({ groups })}\n          rowKey={(record) => record.device_id}\n        />\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </>\n  );\n};\n\nexport default DeviceList;\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport Groups from './Groups';\nimport DeviceList from './devices/DeviceList';\n\nconst { TabPane } = Tabs;\n\nconst Assets: React.FC = () => {\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"Devices\" key=\"1\">\n        <DeviceList />\n      </TabPane>\n      <TabPane tab=\"Groups\" key=\"2\">\n        <Groups />\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default Assets;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Notifications from '../components/Notifications';\nimport Device from '../components/devices/Device';\nimport PrivateRoute from '../private-route';\nimport ManagedApps from '../components/ManagedApps';\nimport LicencePolicy from '../components/LicencePolicy';\nimport Assets from '../components/Assets';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <PrivateRoute exact path=\"/\" component={Assets} />\n      <PrivateRoute exact path=\"/device/:id\" component={Device} />\n      <PrivateRoute exact path=\"/assets\" component={Assets} />\n      <PrivateRoute exact path=\"/managed_apps\" component={ManagedApps} />\n      <PrivateRoute exact path=\"/licence_policy\" component={LicencePolicy} />\n      <PrivateRoute exact path=\"/notifications\" component={Notifications} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  ApartmentOutlined,\n  UsergroupAddOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport Routes from '../../routes/index';\n\nconst { Header, Sider, Content } = Layout;\n\nconst AppLayout: React.FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const history = useHistory();\n  const handleClick = () => history.push('/');\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" onClick={handleClick} aria-hidden=\"true\">\n          <img\n            src=\"./logo_19.png\"\n            alt=\"Intrapolis\"\n            className={`${collapsed ? 'hidden' : 'visible'}`}\n          />\n        </div>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\" icon={<ApartmentOutlined />}>\n            <Link to=\"/\">DashBoard</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />}>\n            <Link to=\"/assets\">Assets</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<ApartmentOutlined />}>\n            <Link to=\"/managed_apps\">Managed Apps</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<ApartmentOutlined />}>\n            <Link to=\"/licence_policy\">Licence Policy</Link>\n          </Menu.Item>\n          <Menu.Item key=\"5\" icon={<NotificationOutlined />}>\n            <Link to=\"/notifications\">Notifications</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: 'trigger',\n              onClick: toggle,\n            }\n          )}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <Routes />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login: React.FC = () => {\n  const { push } = useHistory();\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n    localStorage.setItem('user', 'user');\n    push('/');\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div\n      style={{\n        marginTop: 150,\n        marginLeft: 150,\n        marginRight: 250,\n        padding: 50,\n        border: '3px solid lightgrey',\n        backgroundColor: 'lightgrey',\n      }}\n    >\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input style={{ width: 150 }} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n          <Input.Password style={{ width: 150 }} />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport AppLayout from '../../components/layout';\nimport Login from '../../components/Login';\n\nexport default function MainRoute() {\n  return (\n    <Switch>\n      <Route exact path=\"/login\" component={Login} />\n      <Route component={AppLayout} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ContextAPI from './context/index';\nimport FuncErrorBoundary from './services/error-boundary';\nimport MainRoute from './routes/main-route';\n\nconst App: React.FC = () => {\n  return (\n    <FuncErrorBoundary>\n      <ContextAPI>\n        <Router>\n          <MainRoute />\n        </Router>\n      </ContextAPI>\n    </FuncErrorBoundary>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}