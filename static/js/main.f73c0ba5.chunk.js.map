{"version":3,"sources":["i18n.ts","context/index.tsx","services/error-boundary.tsx","components/Notifications.tsx","lib/util.tsx","util/AxiosInstance.ts","config/index.tsx","util/Api.ts","lib/table.tsx","components/devices/Device.tsx","private-route/index.tsx","components/Applications.tsx","components/LicencePolicy.tsx","components/forms/GroupEdit.tsx","components/Groups.tsx","components/devices/DeviceList.tsx","components/Assets.tsx","components/NotFound.tsx","routes/index.tsx","components/layout/index.tsx","components/Login.tsx","routes/main-route/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","Context","React","createContext","APIContext","children","Provider","value","component","errorHandler","FuncErrorBoundary","props","error","className","message","state","undefined","info","this","Component","Notifications","launchToast","x","document","getElementById","innerHTML","setTimeout","replace","axiosInstance","axios","create","interceptors","request","config","Promise","reject","response","Object","freeze","serverEndPoint","serverEndPointv2","baseURL","Config","baseURL2","getDeviceList","a","get","data","getGroupList","getApplicationList","getRunningAppList","post","getInstalledAppList","updateDeviceGroup","put","deleteGroup","id","delete","Option","Select","getName","R","dateFormatPattern","installedAppsTableConfig","title","dataIndex","render","time","moment","Date","format","runningAppsTableConfig","install_time","initGroupsTableConfig","showModal","showConfirm","whitelist","record","tmp","map","tag","i","color","toUpperCase","Math","random","blacklist","key","text","size","type","data-info","onClick","danger","initDeviceListTableConfig","groups","handleGroupChange","sorter","b","device_id","sortOrder","device_name","length","path","to","group_name","defaultValue","group_id","style","width","onChange","group","name","filters","filterMultiple","onFilter","os","indexOf","CheckOutlined","CloseOutlined","last_heart_beat_time","replaceAll","is_complient","applicationTableConfig","TabPane","Tabs","Device","query","URLSearchParams","useLocation","search","t","useTranslation","device","useState","runningApps","setRunningApps","installedApps","setInstalledApps","activeTabIndex","setActiveTabIndex","installedAppsCount","runningAppsCount","statsData","setStatData","useEffect","payload","timerange","rDviceList","iDeviceList","marginBottom","direction","aria-hidden","role","defaultActiveKey","activeKey","tab","dataSource","columns","rowKey","PrivateRoute","exact","localStorage","getItem","Applications","apps","setApps","appCount","osCount","result","LicencePolicy","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","GroupEditForm","editGroupId","selectedWL","setSelectedWL","selectedBL","setSelectedBL","editGroupName","setEditGroupName","appOptions","setAppOptions","appList","appOpts","item","tgroups","JSON","parse","stringify","filter","tgroup","twhiteList","items","tblackList","onFinish","console","log","Item","label","rules","mode","allowClear","placeholder","values","offset","htmlType","confirm","Modal","Groups","setGroups","visible","setVisible","confirmLoading","setConfirmLoading","setEditGroupId","forceUpdate","setforceUpdate","icon","ExclamationCircleOutlined","content","onOk","status","onCancel","GroupEdit","DeviceList","devices","setDevices","odevices","setODevices","deviceGroup","setDeviceGroup","Form","useForm","form","disabled","setdisabled","deviceCount","statesCount","complienceCount","groupCount","setStatsData","onReset","resetFields","e","tDevices","onSave","processData","deviceData","device_data","ram","storage","date","start","add","abs","getTimezoneOffset","diff","result1","groupList","swichTabCallback","marginTop","fdevices","patt","RegExp","trim","exec","gutter","xs","sm","md","lg","prefix","SearchOutlined","hasFeedback","suffixIcon","UsergroupAddOutlined","shouldUpdate","isFieldsTouched","getFieldsError","errors","split","groupId","deviceId","tdeviceGroup","Assets","NotFound","Routes","Header","Layout","Sider","Content","AppLayout","collapsed","setCollapsed","history","useHistory","trigger","collapsible","push","src","alt","theme","defaultSelectedKeys","ApartmentOutlined","NotificationOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","tailLayout","Login","marginLeft","marginRight","border","backgroundColor","initialValues","remember","setItem","onFinishFailed","errorInfo","Password","valuePropName","MainRoute","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f73c0ba5.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport English from './locale/en_translate.json';\n\nconst resources = {\n  en: {\n    translation: English,\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'en',\n\n  keySeparator: false,\n\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nexport const Context = React.createContext({});\n\nconst APIContext: React.FC = ({ children }) => {\n  return <Context.Provider value={{}}>{children}</Context.Provider>;\n};\n\nexport default APIContext;\n","import React, { ErrorInfo, Component, ReactNode, ComponentType } from 'react';\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void;\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => ReactNode;\n\ntype ErrorState = { error?: Error };\n\nfunction Catch(\n  component: ErrorHandlingComponent<Props>,\n  errorHandler?: ErrorHandler\n): ComponentType<Props> {\n  return class extends Component<Props, ErrorState> {\n    // eslint-disable-next-line react/state-in-constructor\n    state: ErrorState = {\n      error: undefined,\n    };\n\n    static getDerivedStateFromError(error: Error) {\n      return { error };\n    }\n\n    componentDidCatch(error: Error, info: ErrorInfo) {\n      if (errorHandler) {\n        errorHandler(error, info);\n      }\n    }\n\n    render() {\n      const { error } = this.state;\n      return component(this.props, error);\n    }\n  };\n}\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst FuncErrorBoundary = Catch(function MyErrorBoundary(\n  props: Props,\n  error?: Error\n) {\n  if (error) {\n    return (\n      <div className=\"error-screen\">\n        <h2>An error has occured</h2>\n        <h4>{error.message}</h4>\n      </div>\n    );\n  }\n  return <>{props.children}</>;\n});\n\nexport default FuncErrorBoundary;\n","import React from 'react';\n\nconst Notifications: React.FC = () => {\n  return (\n    <>\n      <h3>Notifications</h3>\n    </>\n  );\n};\n\nexport default Notifications;\n","import { useLocation } from 'react-router';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useQuery = (): URLSearchParams =>\n  new URLSearchParams(useLocation().search);\n\nexport const launchToast = (message: string): void => {\n  const x = document.getElementById('snackbar');\n  if (x) {\n    x.innerHTML = message;\n    x.className = 'show';\n    setTimeout(() => {\n      x.className = x.className.replace('show', '');\n    }, 3000);\n  }\n};\n","import axios from 'axios';\nimport { launchToast } from '../lib/util';\n\nconst axiosInstance = axios.create();\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  },\n  (error) => {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    launchToast(error.message);\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance;\n","export default Object.freeze({\n  serverEndPoint: 'https://1xaglr1sdj.execute-api.ap-south-1.amazonaws.com/api',\n  serverEndPointv2:\n    'https://24ryonlt7j.execute-api.ap-south-1.amazonaws.com/v2',\n});\n","import axios from './AxiosInstance';\nimport Config from '../config/index';\nimport {\n  GetDeviceAppsPayload,\n  Device,\n  Group,\n  Application,\n} from './constants/types';\n\nconst { serverEndPoint: baseURL, serverEndPointv2: baseURL2 } = Config;\n\nexport const getDeviceList = async (): Promise<Device[]> => {\n  const response = await axios.get(`${baseURL2}/device`);\n  return response.data.data;\n};\n\nexport const getGroupList = async (): Promise<Group[]> => {\n  const response = await axios.get(`${baseURL2}/group`);\n  return response.data.data;\n};\n\nexport const getApplicationList = async (): Promise<Application[]> => {\n  const response = await axios.get(`${baseURL2}/application`);\n  return response.data.data;\n};\n\nexport const getRunningAppList = async (\n  data: GetDeviceAppsPayload\n): Promise<any> => {\n  const response = await axios.post(`${baseURL}/getrunningapps`, data);\n  return response.data;\n};\n\nexport const getInstalledAppList = async (\n  data: GetDeviceAppsPayload\n): Promise<any> => {\n  const response = await axios.post(`${baseURL}/getinstalledapps`, data);\n  return response.data;\n};\n\nexport const updateDeviceGroup = async (data: any): Promise<any> => {\n  const response = await axios.put(`${baseURL2}/device/group`, data);\n  return response.data;\n};\n\nexport const deleteGroup = async (id: string | number): Promise<any> => {\n  const response = await axios.delete(`${baseURL}/group/${id}`);\n  return response.data;\n};\n\nexport default {};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport * as R from 'ramda';\nimport { Tag, Select, Space, Button } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport {\n  Blacklist,\n  Group,\n  Whitelist,\n  Device,\n  Application,\n} from '../util/constants/types';\n\nconst { Option } = Select;\n\nconst getName = R.pluck('name');\nconst dateFormatPattern = 'MMM D YYYY, h:mm A';\n\nexport const installedAppsTableConfig = [\n  {\n    title: 'Name',\n    dataIndex: 'App name',\n  },\n  {\n    title: 'Installation status',\n    dataIndex: 'Installation status',\n  },\n  {\n    title: 'Time',\n    dataIndex: 'time',\n    render: (time: string): string =>\n      moment(new Date(time)).format(dateFormatPattern),\n  },\n];\n\nexport const runningAppsTableConfig = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n  },\n  {\n    title: 'Running Status',\n    dataIndex: 'Running status',\n  },\n  {\n    title: 'Installation status',\n    dataIndex: 'Installation status',\n  },\n  {\n    title: 'Installed Time',\n    dataIndex: 'install_time',\n    render: (install_time: string): string =>\n      moment(new Date(install_time)).format(dateFormatPattern),\n  },\n];\n\nexport const initGroupsTableConfig = (data: any) => {\n  const { showModal, showConfirm } = data;\n  const groupsTableConfig: ColumnsType<Group> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'group',\n    },\n    {\n      title: 'Force list apps',\n      dataIndex: 'whitelist',\n      render: (whitelist: Whitelist[], record: Group): React.ReactNode => {\n        const tmp = whitelist;\n        return (\n          <>\n            {record.whitelist &&\n              getName(tmp).map((tag: string, i: number) => {\n                const color = i % 2 === 0 ? 'geekblue' : 'green';\n                return (\n                  <Tag color={color} key={Math.random()}>\n                    {tag.toUpperCase()}\n                  </Tag>\n                );\n              })}\n          </>\n        );\n      },\n    },\n    {\n      title: 'Banned list apps',\n      dataIndex: 'blacklist',\n      render: (blacklist: Blacklist[], record: Group): React.ReactNode => {\n        const tmp = blacklist;\n        return (\n          <>\n            {record.blacklist &&\n              getName(tmp).map((tag: string) => {\n                return (\n                  <Tag color=\"volcano\" key={Math.random()}>\n                    {tag.toUpperCase()}\n                  </Tag>\n                );\n              })}\n          </>\n        );\n      },\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Button\n            type=\"primary\"\n            data-info={record}\n            onClick={() => showModal(record)}\n          >\n            Edit\n          </Button>\n          <Button type=\"primary\" onClick={() => showConfirm(record)} danger>\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n  return groupsTableConfig;\n};\n\nexport const initDeviceListTableConfig = (data: any) => {\n  const { groups, handleGroupChange } = data;\n  const deviceListTableConfig: ColumnsType<Device> = [\n    {\n      title: 'Id',\n      dataIndex: 'device_id',\n      sorter: (a: Device, b: Device): number => a.device_id - b.device_id,\n      sortOrder: 'ascend',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'device_name',\n      sorter: (a: Device, b: Device): number =>\n        a.device_name.length - b.device_name.length,\n      render: (device_name: string, record: Device): React.ReactNode => {\n        const path = `/devices/${record.device_id}?name=${device_name}`;\n        return (\n          <>\n            <Link to={path}> {`${device_name}`}</Link>\n          </>\n        );\n      },\n    },\n    {\n      title: 'Group',\n      dataIndex: 'group_name',\n      render: (group_name: string, record: Device): React.ReactNode => {\n        return (\n          <Select\n            defaultValue={`${record.group_id}-${record.device_id}`}\n            style={{ width: 120 }}\n            onChange={handleGroupChange}\n          >\n            {groups.map((group: any) => (\n              <Option\n                key={Math.random()}\n                value={`${group.id}-${record.device_id}`}\n              >\n                {group.name}\n              </Option>\n            ))}\n          </Select>\n        );\n      },\n    },\n    {\n      title: 'OS',\n      dataIndex: 'os',\n      filters: [\n        {\n          text: 'Ubuntu',\n          value: 'Ubuntu',\n        },\n        {\n          text: 'MacOS',\n          value: 'macOS',\n        },\n      ],\n      filterMultiple: true,\n      onFilter: (value: any, record: Device): boolean =>\n        record.os.indexOf(value) === 0,\n      sorter: (a: Device, b: Device): number => a.os.length - b.os.length,\n    },\n    {\n      title: 'IP Address',\n      dataIndex: 'ipaddress',\n    },\n    {\n      title: 'Ram',\n      dataIndex: 'ram',\n    },\n    {\n      title: 'Storage',\n      dataIndex: 'storage',\n    },\n    {\n      title: 'State',\n      dataIndex: 'state',\n      render: (state: boolean): React.ReactNode => {\n        return state ? <CheckOutlined /> : <CloseOutlined />;\n      },\n    },\n    {\n      title: 'Updated Time',\n      dataIndex: 'last_heart_beat_time',\n      render: (last_heart_beat_time: string): string => {\n        const tmp = last_heart_beat_time.replaceAll('\"', '');\n        return moment(new Date(tmp)).format('MMM D YYYY, h:mm A');\n      },\n    },\n    {\n      title: 'Complient',\n      dataIndex: 'is_complient',\n      render: (is_complient: boolean): React.ReactNode => {\n        return is_complient ? <CheckOutlined /> : <CloseOutlined />;\n      },\n    },\n  ];\n  return deviceListTableConfig;\n};\n\nexport const applicationTableConfig: ColumnsType<Application> = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Version',\n    dataIndex: 'version_name',\n  },\n  {\n    title: 'Os',\n    dataIndex: 'os',\n  },\n  {\n    title: 'Application version',\n    dataIndex: 'app_version_id',\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Table, Space, Card } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '../../lib/util';\nimport { getRunningAppList, getInstalledAppList } from '../../util/Api';\nimport {\n  installedAppsTableConfig,\n  runningAppsTableConfig,\n} from '../../lib/table';\n\nconst { TabPane } = Tabs;\n\nconst Device: React.FC = () => {\n  const query = useQuery();\n  const { t } = useTranslation();\n  const device = query.get('name');\n  const [runningApps, setRunningApps] = useState([]);\n  const [installedApps, setInstalledApps] = useState([]);\n  const [activeTabIndex, setActiveTabIndex] = useState('1');\n  const [statsData, setStatData] = useState({\n    installedAppsCount: 0,\n    runningAppsCount: 0,\n  });\n  useEffect(() => {\n    (async () => {\n      const payload = { device, timerange: '120m' };\n      const rDviceList = await getRunningAppList(payload);\n      const iDeviceList = await getInstalledAppList(payload);\n      setInstalledApps(iDeviceList);\n      setRunningApps(rDviceList);\n    })();\n    return () => {\n      setInstalledApps([]);\n      setRunningApps([]);\n      setStatData({\n        installedAppsCount: 0,\n        runningAppsCount: 0,\n      });\n    };\n  }, []);\n\n  return (\n    <>\n      <h1>\n        {t('device')} : {device}\n      </h1>\n      <div style={{ marginBottom: '1em' }} id=\"device-stats\">\n        <Space direction=\"horizontal\" size=\"large\">\n          <div aria-hidden role=\"button\" onClick={() => setActiveTabIndex('1')}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{statsData.runningAppsCount}</h1>\n                <h2>{t('Running Applications')} </h2>\n              </div>\n            </Card>\n          </div>\n          <div aria-hidden role=\"button\" onClick={() => setActiveTabIndex('2')}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{statsData.installedAppsCount}</h1>\n                <h2>{t('Installed Applications')} </h2>\n              </div>\n            </Card>\n          </div>\n        </Space>\n      </div>\n      <Tabs\n        defaultActiveKey=\"1\"\n        activeKey={activeTabIndex}\n        onChange={(activeKey) => setActiveTabIndex(activeKey)}\n      >\n        <TabPane tab=\"Running Apps\" key=\"1\">\n          <h1>{t('runningApps')}</h1>\n          <Table\n            dataSource={runningApps}\n            columns={runningAppsTableConfig}\n            rowKey={() => Math.random()}\n          />\n        </TabPane>\n        <TabPane tab=\"Installed Apps\" key=\"2\">\n          <h1>{t('installedApps')}</h1>\n          <Table\n            dataSource={installedApps}\n            columns={installedAppsTableConfig}\n            rowKey={() => Math.random()}\n          />\n        </TabPane>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Device;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ninterface Props {\n  component: React.FC;\n  path: string;\n  exact: boolean;\n}\n\nconst PrivateRoute: React.FC<Props> = ({ path, exact, component }: Props) => {\n  const isAuthenticated = localStorage.getItem('user');\n\n  return isAuthenticated ? (\n    <Route path={path} exact={exact} component={component} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n};\nexport default PrivateRoute;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Space, Card } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { getApplicationList } from '../util/Api';\nimport { Application } from '../util/constants/types';\nimport { applicationTableConfig } from '../lib/table';\n\nconst Applications: React.FC = () => {\n  const { t } = useTranslation();\n  const [apps, setApps] = useState<Application[]>([]);\n  const [statsData, setStatData] = useState({\n    appCount: 0,\n    osCount: 0,\n  });\n\n  useEffect(() => {\n    (async () => {\n      const result = await getApplicationList();\n      setStatData({\n        ...statsData,\n        appCount: result.length,\n      });\n      setApps(result);\n      return () => {\n        setApps([]);\n        setStatData({ appCount: 0, osCount: 0 });\n      };\n    })();\n  }, []);\n\n  return (\n    <div>\n      <h3>{t('Applications')}</h3>\n      <div style={{ marginBottom: '1em' }} id=\"app-stats\">\n        <Space direction=\"horizontal\" size=\"large\">\n          <div aria-hidden role=\"button\">\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{statsData.appCount}</h1>\n                <h2>{t('Applications')} </h2>\n              </div>\n            </Card>\n          </div>\n          <div aria-hidden role=\"button\">\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{statsData.osCount}</h1>\n                <h2>{t('Operating Systems')} </h2>\n              </div>\n            </Card>\n          </div>\n        </Space>\n      </div>\n      <Table\n        dataSource={apps}\n        columns={applicationTableConfig}\n        rowKey={(record: Application) => record.id}\n      />\n    </div>\n  );\n};\n\nexport default Applications;\n","import React from 'react';\n\nconst LicencePolicy: React.FC = () => {\n  return (\n    <>\n      <h3>Licence Policy</h3>\n    </>\n  );\n};\n\nexport default LicencePolicy;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Select } from 'antd';\nimport { Blacklist, Whitelist, Group } from '../../util/constants/types';\nimport { getApplicationList } from '../../util/Api';\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 16 },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n/* eslint-enable no-template-curly-in-string */\ninterface Props {\n  editGroupId: number | string;\n  groups: Group[];\n}\nconst GroupEditForm: React.FC<Props> = (props) => {\n  const { editGroupId, groups } = props;\n  const [selectedWL, setSelectedWL] = useState<string[]>([]);\n  const [selectedBL, setSelectedBL] = useState<string[]>([]);\n  const [editGroupName, setEditGroupName] = useState('');\n  const [appOptions, setAppOptions] = useState<React.ReactNode[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const appList = await getApplicationList();\n      const appOpts = appList.map((item) => (\n        <Option key={item.id} value={item.name}>\n          {item.name.toUpperCase()}\n        </Option>\n      ));\n      setAppOptions(appOpts);\n    })();\n    return () => {\n      setAppOptions([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    let tgroups = JSON.parse(JSON.stringify(groups));\n    tgroups = tgroups.filter((item: Group) => item.id === editGroupId);\n    const [tgroup] = tgroups;\n    const { whitelist = [] } = tgroup;\n    const { blacklist = [] } = tgroup;\n    const twhiteList = whitelist\n      .map((item: Whitelist) => item.name)\n      .filter(\n        (item: string, i: number, items: string[]) => items.indexOf(item) === i\n      );\n    const tblackList = blacklist\n      .map((item: Blacklist) => item.name)\n      .filter(\n        (item: string, i: number, items: string[]) => items.indexOf(item) === i\n      );\n    setSelectedWL(twhiteList);\n    setSelectedBL(tblackList);\n    setEditGroupName(tgroup.group);\n    return () => {\n      setSelectedWL([]);\n      setSelectedBL([]);\n      setEditGroupName('');\n    };\n  }, [editGroupId]);\n\n  const onFinish = () => {\n    console.log('Edit group From', editGroupName, selectedBL, selectedWL);\n  };\n\n  return (\n    <Form {...layout} onFinish={onFinish} validateMessages={validateMessages}>\n      <Form.Item label=\"Name\" rules={[{ required: true }]}>\n        <Input name=\"name\" value={editGroupName} />\n      </Form.Item>\n      <Form.Item label=\"Blacklist Apps\">\n        <Select\n          mode=\"multiple\"\n          allowClear\n          style={{ width: '100%' }}\n          placeholder=\"Please select\"\n          key=\"blacklist\"\n          value={selectedBL}\n          onChange={(values) => setSelectedBL(values)}\n        >\n          {appOptions}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"Whitelist Apps\">\n        <Select\n          mode=\"multiple\"\n          allowClear\n          style={{ width: '100%' }}\n          placeholder=\"Please select\"\n          key=\"whitelist\"\n          value={selectedWL}\n          onChange={(values) => setSelectedWL(values)}\n        >\n          {appOptions}\n        </Select>\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default GroupEditForm;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { deleteGroup, getGroupList } from '../util/Api';\nimport { initGroupsTableConfig } from '../lib/table';\nimport { Group, EditGroup } from '../util/constants/types';\nimport GroupEditForm from './forms/GroupEdit';\nimport { launchToast } from '../lib/util';\n\nconst { confirm } = Modal;\n\nconst Groups: React.FC = () => {\n  const { t } = useTranslation();\n  const [groups, setGroups] = useState<Group[]>([]);\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [editGroupId, setEditGroupId] = useState(0);\n  const [forceUpdate, setforceUpdate] = useState(false);\n\n  const showModal = (record: EditGroup) => {\n    setVisible(true);\n    setEditGroupId(record.id);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const result = await getGroupList();\n      setGroups(result);\n    })();\n\n    return () => {\n      setGroups([]);\n      setVisible(false);\n      setConfirmLoading(false);\n    };\n  }, [forceUpdate]);\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  // Confirm Delete\n\n  const showConfirm = (record: Group) => {\n    confirm({\n      title: `Do you want to delete ${record.group} group?`,\n      icon: <ExclamationCircleOutlined />,\n      content: '',\n      onOk() {\n        (async () => {\n          const result = await deleteGroup(record.id);\n          if (result.status === 'Success') launchToast(result.message);\n          setforceUpdate(!forceUpdate);\n        })();\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  };\n\n  return (\n    <>\n      <h3>Groups</h3>\n      <Table\n        dataSource={groups}\n        columns={initGroupsTableConfig({ showModal, showConfirm })}\n        rowKey={(record: Group) => record.id}\n      />\n      <Modal\n        title={t('Edit Group')}\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n      >\n        <GroupEditForm editGroupId={editGroupId} groups={groups} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Groups;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  Space,\n  Card,\n  Form,\n  Input,\n  Button,\n  Select,\n  Row,\n  Col,\n} from 'antd';\nimport moment from 'moment';\nimport { SearchOutlined, UsergroupAddOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { initDeviceListTableConfig } from '../../lib/table';\nimport { Device } from '../../util/constants/types';\nimport { getDeviceList, getGroupList, updateDeviceGroup } from '../../util/Api';\nimport { launchToast } from '../../lib/util';\n\nconst { Option } = Select;\ninterface GroupList {\n  id: number;\n  name: string;\n}\n\ntype Props = {\n  swichTabCallback: any;\n};\n\nconst DeviceList: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [odevices, setODevices] = useState<Device[]>([]);\n  const [groups, setGroups] = useState<GroupList[]>([]);\n  const [deviceGroup, setDeviceGroup] = useState<any[]>([]);\n  const [form] = Form.useForm();\n  const [forceUpdate, setforceUpdate] = useState(false);\n  const [disabled, setdisabled] = useState(false);\n  const [statsData, setStatsData] = useState({\n    deviceCount: 0,\n    statesCount: 0,\n    complienceCount: 0,\n    groupCount: 0,\n  });\n\n  const onFinish = (values: any) => {\n    const { name, group } = values;\n    let fdevices: Device[] = odevices;\n    const patt = new RegExp(name.trim());\n    if (name.trim() !== '')\n      fdevices = fdevices.filter(\n        (device) => patt.exec(device.device_name) !== null\n      );\n    if (group !== 0)\n      fdevices = fdevices.filter((device) => device.group_id === group);\n\n    if (group !== 0 || name.trim() !== '') setDevices(fdevices);\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    setDevices(odevices);\n  };\n\n  const handleGroupChange = (value: string) => {\n    const [groupId, deviceId] = value.split('-');\n    const tdeviceGroup = deviceGroup.filter(\n      (item) => item.deviceId !== deviceId\n    );\n    setDeviceGroup([\n      ...tdeviceGroup,\n      { device_id: deviceId, group_id: groupId },\n    ]);\n  };\n\n  const onFilter = (e: string) => {\n    let tDevices: Device[] = odevices;\n    if (e === 'state') tDevices = tDevices.filter((device) => device.state);\n    if (e === 'complient')\n      tDevices = tDevices.filter((device) => device.is_complient);\n\n    setDevices(tDevices);\n  };\n\n  const onSave = async () => {\n    if (deviceGroup.length) {\n      setdisabled(true);\n      const result = await updateDeviceGroup(deviceGroup);\n      if (result && result.status === 'Success') launchToast(result.data);\n      setDeviceGroup([]);\n      setforceUpdate(!forceUpdate);\n    }\n  };\n\n  const processData = (data: Device[]) =>\n    data.map((item: Device) => {\n      const deviceData = JSON.parse(item.device_data);\n      const tmp = item;\n      tmp.ram = deviceData.ram;\n      tmp.storage = deviceData.storage;\n      const date = new Date(item.last_heart_beat_time.replaceAll('\"', ''));\n      const start = moment(date);\n      start.add(Math.abs(date.getTimezoneOffset()), 'minutes');\n      tmp.state = moment().diff(start, 'minutes') < 5;\n      return tmp;\n    });\n\n  const switchGroups = () => {\n    props.swichTabCallback();\n  };\n\n  useEffect(() => {\n    (async () => {\n      const result = await getDeviceList();\n      const result1 = await getGroupList();\n      const groupList = result1.map((item) => ({\n        id: item.id,\n        name: item.group,\n      }));\n      setGroups(groupList);\n      setDevices(processData(result));\n      setODevices(processData(result));\n      setStatsData({\n        deviceCount: result.length,\n        statesCount: result.filter((item) => item.state).length,\n        complienceCount: result.filter((item) => item.is_complient).length,\n        groupCount: groupList.length,\n      });\n    })();\n    setdisabled(false);\n  }, [forceUpdate]);\n\n  const { deviceCount, statesCount, complienceCount, groupCount } = statsData;\n\n  console.log('deviceGroups', deviceGroup);\n\n  return (\n    <>\n      <h3> {t('device')} </h3>\n      <div style={{ marginBottom: '1em' }}>\n        <Space direction=\"horizontal\" size=\"large\">\n          <div aria-hidden role=\"button\" onClick={onReset}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{deviceCount}</h1>\n                <h2>{t('totalDevices')} </h2>\n              </div>\n            </Card>\n          </div>\n          <div aria-hidden role=\"button\" onClick={() => onFilter('state')}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{statesCount}</h1>\n                <h2>{t('totalStates')} </h2>\n              </div>\n            </Card>\n          </div>\n          <div aria-hidden role=\"button\" onClick={() => onFilter('complient')}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{complienceCount}</h1>\n                <h2>{t('totalComplience')} </h2>\n              </div>\n            </Card>\n          </div>\n          <div aria-hidden role=\"button\" onClick={() => switchGroups()}>\n            <Card className=\"count-card\">\n              <div className=\"card-content\">\n                <h1 className=\"count-number\">{groupCount}</h1>\n                <h2>{t('totalGroups')} </h2>\n              </div>\n            </Card>\n          </div>\n        </Space>\n      </div>\n\n      <div style={{ marginTop: '8px' }}>\n        <Form\n          form={form}\n          name=\"horizontal_login\"\n          // layout=\"inline\"\n          onFinish={onFinish}\n        >\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col className=\"gutter-row\" span={8}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  { required: true, message: 'Please enter asset name!' },\n                ]}\n              >\n                <Input\n                  prefix={<SearchOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Asset Name\"\n                  name=\"assetName\"\n                />\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={6}>\n              <Form.Item\n                name=\"group\"\n                hasFeedback\n                rules={[\n                  { required: true, message: 'Please select your group!' },\n                ]}\n              >\n                <Select\n                  placeholder=\"Please select a group\"\n                  id=\"groupName\"\n                  suffixIcon={\n                    <UsergroupAddOutlined className=\"ant-select-suffix\" />\n                  }\n                >\n                  {groups &&\n                    groups.map((item) => (\n                      <Option key={item.id} value={item.id}>\n                        {item.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={2}>\n              <Form.Item shouldUpdate>\n                {() => (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={\n                      !form.isFieldsTouched(true) ||\n                      !!form\n                        .getFieldsError()\n                        .filter(({ errors }) => errors.length).length\n                    }\n                  >\n                    Filter\n                  </Button>\n                )}\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={2}>\n              <Form.Item>\n                <Button htmlType=\"button\" onClick={onReset}>\n                  Reset\n                </Button>\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={2}>\n              <Form.Item>\n                <Button\n                  htmlType=\"button\"\n                  type=\"primary\"\n                  disabled={disabled}\n                  onClick={onSave}\n                >\n                  Save Groups\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n\n      {groups.length ? (\n        <Table<Device>\n          dataSource={devices}\n          columns={initDeviceListTableConfig({ groups, handleGroupChange })}\n          rowKey={(record) => record.device_id}\n        />\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </>\n  );\n};\n\nexport default DeviceList;\n","import React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport Groups from './Groups';\nimport DeviceList from './devices/DeviceList';\n\nconst { TabPane } = Tabs;\n\nconst Assets: React.FC = () => {\n  const [activeTabIndex, setActiveTabIndex] = useState('1');\n  const swichTabCallback = () => setActiveTabIndex('2');\n  return (\n    <Tabs\n      defaultActiveKey=\"1\"\n      activeKey={activeTabIndex}\n      onChange={(activeKey) => setActiveTabIndex(activeKey)}\n    >\n      <TabPane tab=\"Devices\" key=\"1\">\n        <DeviceList swichTabCallback={swichTabCallback} />\n      </TabPane>\n      <TabPane tab=\"Groups\" key=\"2\">\n        <Groups />\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default Assets;\n","import React from 'react';\n\nconst NotFound: React.FC = () => {\n  return (\n    <div>\n      <h3>Not Found</h3>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Notifications from '../components/Notifications';\nimport Device from '../components/devices/Device';\nimport PrivateRoute from '../private-route';\nimport Applications from '../components/Applications';\nimport LicencePolicy from '../components/LicencePolicy';\nimport Assets from '../components/Assets';\nimport NotFound from '../components/NotFound';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <PrivateRoute exact path=\"/\" component={NotFound} />\n      <PrivateRoute exact path=\"/devices/:id\" component={Device} />\n      <PrivateRoute exact path=\"/devices\" component={Assets} />\n      <PrivateRoute exact path=\"/applications\" component={Applications} />\n      <PrivateRoute exact path=\"/licence_policy\" component={LicencePolicy} />\n      <PrivateRoute exact path=\"/notifications\" component={Notifications} />\n      <Route path=\"*\" exact component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  ApartmentOutlined,\n  UsergroupAddOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport Routes from '../../routes/index';\n\nconst { Header, Sider, Content } = Layout;\n\nconst AppLayout: React.FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const { t } = useTranslation();\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const history = useHistory();\n  const handleClick = () => history.push('/');\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" onClick={handleClick} aria-hidden=\"true\">\n          <img\n            src=\"./logo_19.png\"\n            alt=\"Intrapolis\"\n            className={`${collapsed ? 'hidden' : 'visible'}`}\n          />\n        </div>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\" icon={<ApartmentOutlined />}>\n            <Link to=\"/\">{t('DashBoard')}</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />}>\n            <Link to=\"/devices\">{t('Assets')}</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<ApartmentOutlined />}>\n            <Link to=\"/applications\">{t('Applications')}</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<ApartmentOutlined />}>\n            <Link to=\"/licence_policy\">{t('Licence Policy')}</Link>\n          </Menu.Item>\n          <Menu.Item key=\"5\" icon={<NotificationOutlined />}>\n            <Link to=\"/notifications\">{t('Notifications')}</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: 'trigger',\n              onClick: toggle,\n            }\n          )}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <Routes />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login: React.FC = () => {\n  const { push } = useHistory();\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n    localStorage.setItem('user', 'user');\n    push('/');\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div\n      style={{\n        marginTop: 150,\n        marginLeft: 150,\n        marginRight: 250,\n        padding: 50,\n        border: '3px solid lightgrey',\n        backgroundColor: 'lightgrey',\n      }}\n    >\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input style={{ width: 150 }} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n          <Input.Password style={{ width: 150 }} />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport AppLayout from '../../components/layout';\nimport Login from '../../components/Login';\n\nconst MainRoute: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/login\" component={Login} />\n      <Route component={AppLayout} />\n    </Switch>\n  );\n};\n\nexport default MainRoute;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ContextAPI from './context/index';\nimport FuncErrorBoundary from './services/error-boundary';\nimport MainRoute from './routes/main-route';\n\nconst App: React.FC = () => {\n  return (\n    <FuncErrorBoundary>\n      <ContextAPI>\n        <Router>\n          <MainRoute />\n        </Router>\n      </ContextAPI>\n    </FuncErrorBoundary>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}